(function () {
    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
    var __module = nodeEnv ? module : { exports: {} };
    var __filename = 'engine-dev/cocos2d/core/physics/box2d-adapter.js';
    var __require = nodeEnv ? function (request) {
        return require(request);
    } : function (request) {
        return __quick_compile__.require(request, __filename);
    };
    function __define(exports, require, module) {
        if (!nodeEnv) {
            __quick_compile__.registerModule(__filename, module);
        }
                'use strict';
        var box2d = require('../../../external/box2d/box2d');
        window.b2 = {};
        if (CC_QQPLAY) {
            b2 = window.b2;
        }
        for (var key in box2d) {
            if (key.indexOf('b2_') !== -1) {
                continue;
            }
            var newKey = key.replace('b2', '');
            b2[newKey] = box2d[key];
        }
        b2.maxPolygonVertices = 8;
    }
    if (nodeEnv) {
        __define(__module.exports, __require, __module);
    } else {
        __quick_compile__.registerModuleFunc(__filename, function () {
            __define(__module.exports, __require, __module);
        });
    }
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJveDJkLWFkYXB0ZXIuanMiLCIvVXNlcnMvenpmMjAxOS9EZXNrdG9wL2RldmVsb3BtZW50L3N1cHBvcnRfYXN0Yy9lbmdpbmUvY29jb3MyZC9jb3JlL3BoeXNpY3MvYm94MmQtYWRhcHRlci5qcyJdLCJuYW1lcyI6WyJib3gyZCIsInJlcXVpcmUiLCJ3aW5kb3ciLCJiMiIsIkNDX1FRUExBWSIsImtleSIsImluZGV4T2YiLCJuZXdLZXkiLCJyZXBsYWNlIiwibWF4UG9seWdvblZlcnRpY2VzIl0sIm1hcHBpbmdzIjoiO0lBQW9CLElBQUEsT0FBQSxHQUFBLE9BQUEsT0FBQSxLQUFwQixXQUFvQixJQUFwQixPQUFBLE9BQUEsS0FBQSxXQUFvQjs7SUFFcEIsSUFBQSxVQUFBLEdBQUEsa0RBQUE7SUFDZSxJQUFBLFNBQUEsR0FBQSxPQUFBLEdBQUEsVUFBQSxPQUFBLEVBQUE7QUFBQSxRQUNYLE9BQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQURXO0FBQUEsS0FBQSxHQUVYLFVBQUEsT0FBQSxFQUFBO0FBQUEsUUFDSCxPQUFBLGlCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsRUFBQSxVQUFBLENBQUEsQ0FERztBQUFBLEtBRlc7SUFLQ0EsU0FBTyxRQUFQQSxDQUFPLE9BQVBBLEVBQU8sT0FBUEEsRUFBTyxNQUFQQSxFQUFPO0FBQUEsUUFDSCxJQUFaLENBQUEsT0FBWSxFQUFlO0FBQUEsWUFBQSxpQkFBQSxDQUFBLGNBQUEsQ0FBQSxVQUFBLEVBQUEsTUFBQSxFQUFBO0FBQUEsU0FEWjtBQUFBO1FBUnZCLElBQUlBLEtBQUFBLEdBQVFDLE9BQUFBLENBQVEsK0JBQVJBLENBQVo7UUFFQUMsTUFBQUEsQ0FBT0MsRUFBUEQsR0FBWSxFQUFaQTtRQUNBLElBQUlFLFNBQUosRUFBZTtBQUFBLFlBRVhELEVBQUFBLEdBQUtELE1BQUFBLENBQU9DLEVBQVpBLENBRlc7QUFBQTtRQUtmLFNBQVNFLEdBQVQsSUFBZ0JMLEtBQWhCLEVBQXVCO0FBQUEsWUFDbkIsSUFBSUssR0FBQUEsQ0FBSUMsT0FBSkQsQ0FBWSxLQUFaQSxNQUF1QixDQUFDLENBQTVCLEVBQStCO0FBQUEsZ0JBQzNCLFNBRDJCO0FBQUEsYUFEWjtBQUFBLFlBSW5CLElBQUlFLE1BQUFBLEdBQVNGLEdBQUFBLENBQUlHLE9BQUpILENBQVksSUFBWkEsRUFBa0IsRUFBbEJBLENBQWIsQ0FKbUI7QUFBQSxZQUtuQkYsRUFBQUEsQ0FBR0ksTUFBSEosSUFBYUgsS0FBQUEsQ0FBTUssR0FBTkwsQ0FBYkcsQ0FMbUI7QUFBQTtRQVF2QkEsRUFBQUEsQ0FBR00sa0JBQUhOLEdBQXdCLENBQXhCQSxDQVJ1QjtBQUFBO0lBR2xCLElBQUEsT0FBQSxFQUFBO0FBQUEsUUFDZ0JLLFFBQUFBLENBQUosUUFBQSxDQUFiLE9BQWlCQSxFQUFqQixTQUFpQkEsRUFBakIsUUFBaUJBLEVBRGhCO0FBQUEsS0FBQSxNQUdKO0FBQUE7WUFFRCxRQUFBLENBQUEsUUFBQSxDQUFBLE9BQUEsRUFBQSxTQUFBLEVBQUEsUUFBQTtXQUZDO0FBQUEiLCJmaWxlIjoiYm94MmQtYWRhcHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBib3gyZCA9IHJlcXVpcmUoJy4uLy4uLy4uL2V4dGVybmFsL2JveDJkL2JveDJkJyk7XG5cbndpbmRvdy5iMiA9IHt9O1xuaWYgKENDX1FRUExBWSkge1xuICAgIC8vIGNhbiBvbmx5IGRlZmluZSBnbG9iYWwgdmFyaWFibGUgaW4gdGhpcyB3YXlcbiAgICBiMiA9IHdpbmRvdy5iMjtcbn1cblxuZm9yICh2YXIga2V5IGluIGJveDJkKSB7XG4gICAgaWYgKGtleS5pbmRleE9mKCdiMl8nKSAhPT0gLTEpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGxldCBuZXdLZXkgPSBrZXkucmVwbGFjZSgnYjInLCAnJyk7XG4gICAgYjJbbmV3S2V5XSA9IGJveDJkW2tleV07XG59XG5cbmIyLm1heFBvbHlnb25WZXJ0aWNlcyA9IDg7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBib3gyZCA9IHJlcXVpcmUoJy4uLy4uLy4uL2V4dGVybmFsL2JveDJkL2JveDJkJyk7XG5cbndpbmRvdy5iMiA9IHt9O1xuaWYgKENDX1FRUExBWSkge1xuICAgIC8vIGNhbiBvbmx5IGRlZmluZSBnbG9iYWwgdmFyaWFibGUgaW4gdGhpcyB3YXlcbiAgICBiMiA9IHdpbmRvdy5iMjtcbn1cblxuZm9yICh2YXIga2V5IGluIGJveDJkKSB7XG4gICAgaWYgKGtleS5pbmRleE9mKCdiMl8nKSAhPT0gLTEpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgfVxuICAgIHZhciBuZXdLZXkgPSBrZXkucmVwbGFjZSgnYjInLCAnJyk7XG4gICAgYjJbbmV3S2V5XSA9IGJveDJkW2tleV07XG59XG5cbmIyLm1heFBvbHlnb25WZXJ0aWNlcyA9IDg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUp2ZURKa0xXRmtZWEIwWlhJdWFuTWlYU3dpYm1GdFpYTWlPbHNpWW05NE1tUWlMQ0p5WlhGMWFYSmxJaXdpZDJsdVpHOTNJaXdpWWpJaUxDSkRRMTlSVVZCTVFWa2lMQ0pyWlhraUxDSnBibVJsZUU5bUlpd2libVYzUzJWNUlpd2ljbVZ3YkdGalpTSXNJbTFoZUZCdmJIbG5iMjVXWlhKMGFXTmxjeUpkTENKdFlYQndhVzVuY3lJNklqczdRVUZCUVN4SlFVRkpRU3hSUVVGUlF5eFJRVUZSTEN0Q1FVRlNMRU5CUVZvN08wRkJSVUZETEU5QlFVOURMRVZCUVZBc1IwRkJXU3hGUVVGYU8wRkJRMEVzU1VGQlNVTXNVMEZCU2l4RlFVRmxPMEZCUTFnN1FVRkRRVVFzVTBGQlMwUXNUMEZCVDBNc1JVRkJXanRCUVVOSU96dEJRVVZFTEV0QlFVc3NTVUZCU1VVc1IwRkJWQ3hKUVVGblFrd3NTMEZCYUVJc1JVRkJkVUk3UVVGRGJrSXNVVUZCU1Vzc1NVRkJTVU1zVDBGQlNpeERRVUZaTEV0QlFWb3NUVUZCZFVJc1EwRkJReXhEUVVFMVFpeEZRVUVyUWp0QlFVTXpRanRCUVVOSU8wRkJRMFFzVVVGQlNVTXNVMEZCVTBZc1NVRkJTVWNzVDBGQlNpeERRVUZaTEVsQlFWb3NSVUZCYTBJc1JVRkJiRUlzUTBGQllqdEJRVU5CVEN4UFFVRkhTU3hOUVVGSUxFbEJRV0ZRTEUxQlFVMUxMRWRCUVU0c1EwRkJZanRCUVVOSU96dEJRVVZFUml4SFFVRkhUU3hyUWtGQlNDeEhRVUYzUWl4RFFVRjRRaUlzSW1acGJHVWlPaUppYjNneVpDMWhaR0Z3ZEdWeUxtcHpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYkdWMElHSnZlREprSUQwZ2NtVnhkV2x5WlNnbkxpNHZMaTR2TGk0dlpYaDBaWEp1WVd3dlltOTRNbVF2WW05NE1tUW5LVHRjYmx4dWQybHVaRzkzTG1JeUlEMGdlMzA3WEc1cFppQW9RME5mVVZGUVRFRlpLU0I3WEc0Z0lDQWdMeThnWTJGdUlHOXViSGtnWkdWbWFXNWxJR2RzYjJKaGJDQjJZWEpwWVdKc1pTQnBiaUIwYUdseklIZGhlVnh1SUNBZ0lHSXlJRDBnZDJsdVpHOTNMbUl5TzF4dWZWeHVYRzVtYjNJZ0tIWmhjaUJyWlhrZ2FXNGdZbTk0TW1RcElIdGNiaUFnSUNCcFppQW9hMlY1TG1sdVpHVjRUMllvSjJJeVh5Y3BJQ0U5UFNBdE1Ta2dlMXh1SUNBZ0lDQWdJQ0JqYjI1MGFXNTFaVHRjYmlBZ0lDQjlYRzRnSUNBZ2JHVjBJRzVsZDB0bGVTQTlJR3RsZVM1eVpYQnNZV05sS0NkaU1pY3NJQ2NuS1R0Y2JpQWdJQ0JpTWx0dVpYZExaWGxkSUQwZ1ltOTRNbVJiYTJWNVhUdGNibjFjYmx4dVlqSXViV0Y0VUc5c2VXZHZibFpsY25ScFkyVnpJRDBnT0R0Y2JpSmRmUT09Il19